
# Stage 1: Build the React application
FROM oven/bun:1 as builder

WORKDIR /app

# Accept build arguments for environment variables.
# All VITE_ variables from environment.ts should be declared here to be configurable at build time.
ARG VITE_APP_NAME="Compliance Management System"
ARG VITE_APP_VERSION="1.0.0"
ARG VITE_APP_DOMAIN
ARG VITE_SUPPORT_EMAIL
ARG VITE_ENVIRONMENT=production
ARG VITE_API_BASE_URL
ARG VITE_API_TIMEOUT="30000"
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY
ARG VITE_USE_MOCK_DATA=false
ARG VITE_ENABLE_ANALYTICS="true"
ARG VITE_ENABLE_ERROR_REPORTING="true"
ARG VITE_MAINTENANCE_MODE="false"
ARG VITE_DEBUG_MODE="false"
ARG VITE_ENABLE_PERFORMANCE_MONITORING="true"
ARG VITE_ENABLE_SW="true"
ARG VITE_CACHE_TIMEOUT="300000"
ARG VITE_REQUEST_TIMEOUT="10000"
ARG VITE_ENABLE_CSP="true"
ARG VITE_ENABLE_HSTS="true"
ARG VITE_RATE_LIMIT_WINDOW="60000"
ARG VITE_RATE_LIMIT_MAX="100"
ARG VITE_LOG_LEVEL="error"
ARG VITE_ENABLE_CONSOLE_LOGGING="false"
ARG VITE_ENABLE_REMOTE_LOGGING="true"
ARG VITE_NEWS_API_ENABLED="true"
ARG VITE_NEWS_REFRESH_INTERVAL="300000"

# Set environment variables for the build process
ENV VITE_APP_NAME=${VITE_APP_NAME}
ENV VITE_APP_VERSION=${VITE_APP_VERSION}
ENV VITE_APP_DOMAIN=${VITE_APP_DOMAIN}
ENV VITE_SUPPORT_EMAIL=${VITE_SUPPORT_EMAIL}
ENV VITE_ENVIRONMENT=${VITE_ENVIRONMENT}
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ENV VITE_API_TIMEOUT=${VITE_API_TIMEOUT}
ENV VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
ENV VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}
ENV VITE_USE_MOCK_DATA=${VITE_USE_MOCK_DATA}
ENV VITE_ENABLE_ANALYTICS=${VITE_ENABLE_ANALYTICS}
ENV VITE_ENABLE_ERROR_REPORTING=${VITE_ENABLE_ERROR_REPORTING}
ENV VITE_MAINTENANCE_MODE=${VITE_MAINTENANCE_MODE}
ENV VITE_DEBUG_MODE=${VITE_DEBUG_MODE}
ENV VITE_ENABLE_PERFORMANCE_MONITORING=${VITE_ENABLE_PERFORMANCE_MONITORING}
ENV VITE_ENABLE_SW=${VITE_ENABLE_SW}
ENV VITE_CACHE_TIMEOUT=${VITE_CACHE_TIMEOUT}
ENV VITE_REQUEST_TIMEOUT=${VITE_REQUEST_TIMEOUT}
ENV VITE_ENABLE_CSP=${VITE_ENABLE_CSP}
ENV VITE_ENABLE_HSTS=${VITE_ENABLE_HSTS}
ENV VITE_RATE_LIMIT_WINDOW=${VITE_RATE_LIMIT_WINDOW}
ENV VITE_RATE_LIMIT_MAX=${VITE_RATE_LIMIT_MAX}
ENV VITE_LOG_LEVEL=${VITE_LOG_LEVEL}
ENV VITE_ENABLE_CONSOLE_LOGGING=${VITE_ENABLE_CONSOLE_LOGGING}
ENV VITE_ENABLE_REMOTE_LOGGING=${VITE_ENABLE_REMOTE_LOGGING}
ENV VITE_NEWS_API_ENABLED=${VITE_NEWS_API_ENABLED}
ENV VITE_NEWS_REFRESH_INTERVAL=${VITE_NEWS_REFRESH_INTERVAL}

# Copy package management files
COPY package.json bun.lockb tsconfig.json ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy the rest of the application source code
# Note: .dockerignore is used to exclude unnecessary files
COPY . .

# Build the application
RUN bun run build

# Stage 2: Serve the application with Nginx
FROM nginx:alpine

# Copy the built assets from the builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy the Nginx configuration file
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
